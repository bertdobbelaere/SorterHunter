# Sample config file for SorterHunter program
# Note: keys are case sensitive.

# Number of inputs to the sorting network (no default)
Ninputs=64

# Assume symmetric network (=1) or not (=0)
# Symmetric networks allow faster searches and give with few exceptions the best results for even values of Ninputs.
Symmetric=1

# Random seed. Set to value different from 0 to create reproducible results or omit for "practically undeterministic" random to improve chances over multiple runs
#RandomSeed=124

# Inverse probability of pair addition per iteration ("uphill step"). Default: no additions.
EscapeRate=250

# Forcing the uphill step (see EscapeRate) not to break a valid sorter. When set to >0, an inserted pair that would affect the sorting result will be changed into a duplicate of the next pair.
# This gives empirically slightly better results than earlier version that didn't support this option. Default is 1.
#ForceValidUphillStep = 1

# Maximum number of mutations per iteration. Default 1.
MaxMutations = 2

# Relative probabilities of mutation types (integer >=0). Not all must be 0. Don't use huge values (total<10000 is no issue), as a table is allocated for the probability distribution 
WeigthRemovePair = 1              # Remove a random pair
WeigthSwapPairs  = 1              # Swap two random pairs
WeigthReplacePair = 0             # Replace random pair with another pair
WeightCrossPairs = 1              # Cross two pairs at random positions
WeightSwapIntersectingPairs = 1   # Swap pairs in neighbouring layers sharing a connection
WeightReplaceHalfPair = 1         # Replace one of the two connections of a random pair

# Prefix type
# 0 = None (default)
# 1 = Fixed - Prefix pairs from FixedPrefix value will be used
# 2 = GreedyA - Greedy algorithm A: per pair minimisation of remaining pattern set size, randomized every restart when ex aequo.
# 3 = Hybrid prefix, first fixed part, then GreedyA part
PrefixType = 1

# Size of greedy prefix
# Only relevant if PrefixType = 2 or 3
#GreedyPrefixSize = 13

# Specify fixed prefix as comma separated list of pairs. Inputs are 0 based.
# Only relevant if PrefixType = 1 or 3
																  																																																																			 
#Net64_32x32: first 32 nodes are soreted, next 32 nodes are also sorted
FixedPrefix=(0,1),(2,3),(4,5),(6,7),(8,9),(10,11),(12,13),(14,15),(16,17),(18,19),(20,21),(22,23),(24,25),(26,27),(28,29),(30,31),(32,33),(34,35),(36,37),(38,39),(40,41),(42,43),(44,45),(46,47),(48,49),(50,51),(52,53),(54,55),(56,57),(58,59),(60,61),(62,63),(0,2),(1,3),(4,6),(5,7),(8,10),(9,11),(12,14),(13,15),(16,18),(17,19),(20,22),(21,23),(24,26),(25,27),(28,30),(29,31),(32,34),(33,35),(36,38),(37,39),(40,42),(41,43),(44,46),(45,47),(48,50),(49,51),(52,54),(53,55),(56,58),(57,59),(60,62),(61,63),(0,4),(1,5),(2,6),(3,7),(8,12),(9,13),(10,14),(11,15),(16,20),(17,21),(18,22),(19,23),(24,28),(25,29),(26,30),(27,31),(32,36),(33,37),(34,38),(35,39),(40,44),(41,45),(42,46),(43,47),(48,52),(49,53),(50,54),(51,55),(56,60),(57,61),(58,62),(59,63),(0,8),(1,9),(2,10),(3,11),(4,12),(5,13),(6,14),(7,15),(16,24),(17,25),(18,26),(19,27),(20,28),(21,29),(22,30),(23,31),(32,40),(33,41),(34,42),(35,43),(36,44),(37,45),(38,46),(39,47),(48,56),(49,57),(50,58),(51,59),(52,60),(53,61),(54,62),(55,63),(0,16),(1,8),(2,4),(3,12),(5,10),(6,9),(7,14),(11,13),(15,31),(17,24),(18,20),(19,28),(21,26),(22,25),(23,30),(27,29),(32,48),(33,40),(34,36),(35,44),(37,42),(38,41),(39,46),(43,45),(47,63),(49,56),(50,52),(51,60),(53,58),(54,57),(55,62),(59,61),(1,2),(3,5),(4,8),(6,22),(7,11),(9,25),(10,12),(13,14),(17,18),(19,21),(20,24),(23,27),(26,28),(29,30),(33,34),(35,37),(36,40),(38,54),(39,43),(41,57),(42,44),(45,46),(49,50),(51,53),(52,56),(55,59),(58,60),(61,62),(1,17),(2,18),(3,19),(4,20),(5,10),(7,23),(8,24),(11,27),(12,28),(13,29),(14,30),(21,26),(33,49),(34,50),(35,51),(36,52),(37,42),(39,55),(40,56),(43,59),(44,60),(45,61),(46,62),(53,58),(3,17),(4,16),(5,21),(6,18),(7,9),(8,20),(10,26),(11,23),(13,25),(14,28),(15,27),(22,24),(35,49),(36,48),(37,53),(38,50),(39,41),(40,52),(42,58),(43,55),(45,57),(46,60),(47,59),(54,56),(1,4),(3,8),(5,16),(7,17),(9,21),(10,22),(11,19),(12,20),(14,24),(15,26),(23,28),(27,30),(33,36),(35,40),(37,48),(39,49),(41,53),(42,54),(43,51),(44,52),(46,56),(47,58),(55,60),(59,62),(2,5),(7,8),(9,18),(11,17),(12,16),(13,22),(14,20),(15,19),(23,24),(26,29),(34,37),(39,40),(41,50),(43,49),(44,48),(45,54),(46,52),(47,51),(55,56),(58,61),(2,4),(6,12),(9,16),(10,11),(13,17),(14,18),(15,22),(19,25),(20,21),(27,29),(34,36),(38,44),(41,48),(42,43),(45,49),(46,50),(47,54),(51,57),(52,53),(59,61),(5,6),(8,12),(9,10),(11,13),(14,16),(15,17),(18,20),(19,23),(21,22),(25,26),(37,38),(40,44),(41,42),(43,45),(46,48),(47,49),(50,52),(51,55),(53,54),(57,58),(3,5),(6,7),(8,9),(10,12),(11,14),(13,16),(15,18),(17,20),(19,21),(22,23),(24,25),(26,28),(35,37),(38,39),(40,41),(42,44),(43,46),(45,48),(47,50),(49,52),(51,53),(54,55),(56,57),(58,60),(3,4),(5,6),(7,8),(9,10),(11,12),(13,14),(15,16),(17,18),(19,20),(21,22),(23,24),(25,26),(27,28),(35,36),(37,38),(39,40),(41,42),(43,44),(45,46),(47,48),(49,50),(51,52),(53,54),(55,56),(57,58),(59,60)

#Net6_4x2: first 4 nodes are sorted, next 2 nodes are also sorted:
#FixedPrefix=(0,2),(1,3),(0,1),(2,3),(1,2),(4,5)

# Postfix network to finish the sorter. One application is to search for median detecting networks.
# e.g. to find a network just outputing the median of Ninputs=7 inputs, define postfix (0,1),(1,2),(0,1),(4,5),(5,6),(4,5), then find a sorter and just strip the postfix afterwards.
#Postfix=(4,5),(14,15)

# Specify initial network (after prefix, if applicable) as comma separated list of pairs. Inputs are 0 based.
# Pairs containing input indices >= Ninputs will be silently removed (allows reduction of larger known good networks)
# Note that if Symmetric=1 the pairs in InitialNetwork will be subject to mirroring and duplication.
# This feature can be used to try to improve an existing network. Default: empty.
#InitialNetwork=(0,1)

# Inverse probablity per iteration to start over. This is one of the strategies to escape a local minimum. Default: no restart
#RestartRate=1000000000

# Modify overall verbosity level: 
# 0:minimal
# 1:moderate (default)
# 2:high
# >2:debug
#Verbosity=3

